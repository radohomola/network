---
# Get interfaces description and their status

- name: Get interfaces description and their status
  hosts: all
  gather_facts: no
  connection: ansible.netcommon.network_cli
  vars:
    tmp_folder: "./tmp"
    output_file: "output/ifdescription.csv"
  vars_files:
    - "credentials.yml"  
    
  tasks:
    - name: Deleting tmp dir
      file: path="{{ tmp_folder }}" state=absent
      delegate_to: localhost
      run_once: true

    - name: Creating tmp dir
      file: path="{{ tmp_folder }}" state=directory
      delegate_to: localhost
      run_once: true

    - name: Get if description from devices
      ansible.utils.cli_parse:
        command: "show interface description"
        parser:
          name: ansible.utils.textfsm
          template_path: templates/ios_show_if_desc.textfsm
      register: if_description

    - name: Get if interface status
      ansible.utils.cli_parse:
        command: "show interface status"
        parser:
          name: ansible.utils.textfsm
          template_path: templates/ios_show_if_status.textfsm
      register: if_status

    - name: Merge results and save to file
      delegate_to: localhost
      blockinfile:
        path: "{{ tmp_folder }}/{{ inventory_hostname }}.txt"
        create: yes
        block: |
          {% for desc in if_description['parsed'] %}
          {% for stat in if_status['parsed'] %}
          {% if desc['PORT'] == stat['PORT'] %}
          {{ desc['PORT'] }},{{ desc['DESCRIPTION'] }},{{ stat['STATUS'] }},{{ stat['VLAN_ID'] }},{{ stat['TYPE'] }}
          {% endif %}
          {% endfor %}
          {% endfor %}

    - name: Generate output log
      ansible.builtin.assemble:
        src: "{{ tmp_folder }}"
        dest: "{{ output_file }}"
      delegate_to: localhost  
      run_once: true

    - name: Create header in output file
      lineinfile:
        path: "{{ output_file }}"
        insertbefore: BOF
        line: "PORT;DESCRIPTION;VLAN_ID;TYPE;" 
    
    - name: Deleting temp dir
      file: path="{{ tmp_folder }}" state=absent
      delegate_to: localhost
      run_once: true

      
      
   